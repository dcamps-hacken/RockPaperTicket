{
  "address": "0x1eA9638d7B547047Df79fcB06F607444B6Ef71D6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EventLog__GameNotRegistering",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventLog__GameNotStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventLog__NotCalledFromEventGame",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "gameAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStarted",
          "type": "uint256"
        }
      ],
      "name": "GameEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "gameAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStarted",
          "type": "uint256"
        }
      ],
      "name": "GameStarted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "_addCreatedEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "_addRegisteredEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "_addWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "_gameEnd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "_gameStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "_isWinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_eventGameAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_eventOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_eventName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTickets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketPrice",
          "type": "uint256"
        }
      ],
      "name": "_logEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "_updateName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "_updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTickets",
          "type": "uint256"
        }
      ],
      "name": "_updateTickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getCreatedEvents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eventGameAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "eventOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "eventName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTickets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUsers",
              "type": "uint256"
            },
            {
              "internalType": "enum EventLog.GameStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct EventLog.Event[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEvent",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eventGameAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "eventOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "eventName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTickets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUsers",
              "type": "uint256"
            },
            {
              "internalType": "enum EventLog.GameStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct EventLog.Event",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEventAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEventName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEventOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfEvents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfTickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenEvents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eventGameAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "eventOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "eventName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTickets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUsers",
              "type": "uint256"
            },
            {
              "internalType": "enum EventLog.GameStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct EventLog.Event[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getRegisteredEvents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "eventGameAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "eventOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "eventName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfTickets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUsers",
              "type": "uint256"
            },
            {
              "internalType": "enum EventLog.GameStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct EventLog.Event[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getTicketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getTotalUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdb29585bb807e1740182afd504ba89bcbf5fbc0768d597672401c2d9e39918cd",
  "receipt": {
    "to": null,
    "from": "0xE5aD97f1731174D14A71D43Bd06E94a1D3e59A4a",
    "contractAddress": "0x1eA9638d7B547047Df79fcB06F607444B6Ef71D6",
    "transactionIndex": 27,
    "gasUsed": "2624001",
    "logsBloom": "0x
    "blockHash": "0x22e1466bea58e498c17b74b60b357d86a15a18ef4ae51138f5e50fea136e1faa",
    "transactionHash": "0xdb29585bb807e1740182afd504ba89bcbf5fbc0768d597672401c2d9e39918cd",
    "logs": [],
    "blockNumber": 10821435,
    "cumulativeGasUsed": "6747587",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "88e473e3ba592dcb38b93099fc331e8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EventLog__GameNotRegistering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventLog__GameNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventLog__NotCalledFromEventGame\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"_addCreatedEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"_addRegisteredEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"_addWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"_gameEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"_gameStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"_isWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_eventGameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"}],\"name\":\"_logEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"_updateName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"_updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTickets\",\"type\":\"uint256\"}],\"name\":\"_updateTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getCreatedEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"eventGameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eventOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"internalType\":\"enum EventLog.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct EventLog.Event[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEvent\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"eventGameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eventOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"internalType\":\"enum EventLog.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct EventLog.Event\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEventAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEventName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEventOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"eventGameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eventOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"internalType\":\"enum EventLog.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct EventLog.Event[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getRegisteredEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"eventGameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eventOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"internalType\":\"enum EventLog.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct EventLog.Event[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract saves all events and their details and allows to query data\",\"kind\":\"dev\",\"methods\":{},\"title\":\"@author David Camps Novi\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EventLog.sol\":\"EventLog\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EventLog.sol\":{\"content\":\"pragma solidity 0.8.4;\\n\\n//This contract is a log of the created events\\n\\n//Error codes\\nerror EventLog__NotCalledFromEventGame();\\nerror EventLog__GameNotRegistering();\\nerror EventLog__GameNotStarted();\\n\\n/** @title\\n *  @author David Camps Novi\\n *  @dev This contract saves all events and their details and allows to query data\\n */\\n// solc --userdoc --devdoc EventLog.sol\\ncontract EventLog {\\n    // all events ever created are stored in these structures\\n    uint256 private s_numberOfEvents;\\n    uint256[] s_eventIds;\\n    mapping(uint256 => Event) s_events; // s_eventId => Event\\n\\n    // every user events are stored as userAddress => Event\\n    mapping(address => uint256[]) s_registeredEvents;\\n    mapping(address => uint256[]) s_createdEvents;\\n\\n    // the winners of each event are stored as s_eventId => userAddress => true\\n    mapping(uint256 => mapping(address => bool)) s_winners;\\n\\n    enum GameStatus {\\n        Registering,\\n        Started,\\n        Ended\\n    }\\n\\n    struct Event {\\n        address eventGameAddress;\\n        address eventOwner;\\n        string eventName;\\n        uint256 numberOfTickets;\\n        uint256 ticketPrice;\\n        uint256 totalUsers;\\n        GameStatus status;\\n    }\\n\\n    //modifier callFromEvent() {\\n    //    if (msg.sender != s_events[_eventId].eventGameAddress)\\n    //        revert EventLog__NotCalledFromEventGame();\\n    //    _;\\n    //}\\n\\n    constructor() {\\n        s_numberOfEvents = 0;\\n    }\\n\\n    event GameStarted(\\n        address indexed gameAddress,\\n        address indexed owner,\\n        uint256 timeStarted\\n    );\\n\\n    event GameEnded(\\n        address indexed gameAddress,\\n        address indexed owner,\\n        uint256 timeStarted\\n    );\\n\\n    //\\n    // LOG NEW EVENTS\\n    //\\n\\n    function _logEvent(\\n        uint256 _eventId,\\n        address _eventGameAddress,\\n        address _eventOwner,\\n        string memory _eventName,\\n        uint256 _numberOfTickets,\\n        uint256 _ticketPrice\\n    ) external {\\n        s_events[_eventId] = Event(\\n            _eventGameAddress,\\n            _eventOwner,\\n            _eventName,\\n            _numberOfTickets,\\n            _ticketPrice,\\n            0,\\n            GameStatus.Registering\\n        );\\n        s_numberOfEvents += 1;\\n        s_eventIds.push(_eventId);\\n    }\\n\\n    //\\n    // UPDATE EVENTS\\n    //\\n\\n    function _updateName(uint256 _eventId, string memory _newName)\\n        external\\n    //callFromEvent\\n    {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        s_events[_eventId].eventName = _newName;\\n    }\\n\\n    function _updateTickets(uint256 _eventId, uint256 _newTickets) external {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        s_events[_eventId].numberOfTickets = _newTickets;\\n    }\\n\\n    function _updatePrice(uint256 _eventId, uint256 _newPrice) external {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        s_events[_eventId].ticketPrice = _newPrice;\\n    }\\n\\n    // LOG OTHER EVENTS\\n    function _addRegisteredEvent(address _userAddress, uint256 _eventId)\\n        external\\n    {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        s_registeredEvents[_userAddress].push(_eventId);\\n        s_events[_eventId].totalUsers += 1;\\n    }\\n\\n    function _addCreatedEvent(address _userAddress, uint256 _eventId) external {\\n        //require(msg.sender == s_events[_eventId].eventGameAddress);\\n        s_createdEvents[_userAddress].push(_eventId);\\n    }\\n\\n    //\\n    // CHANGE GAME STATUS\\n    //\\n\\n    function _gameStart(uint256 _eventId) external {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        if (s_events[_eventId].status != GameStatus.Registering)\\n            revert EventLog__GameNotRegistering();\\n        //require(s_events[_eventId].status == GameStatus.Registering);\\n        s_events[_eventId].status = GameStatus.Started;\\n        Event memory _event = s_events[_eventId];\\n        emit GameStarted(\\n            _event.eventGameAddress,\\n            _event.eventOwner,\\n            block.timestamp\\n        );\\n    }\\n\\n    function _gameEnd(uint256 _eventId) external {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        if (s_events[_eventId].status != GameStatus.Started)\\n            revert EventLog__GameNotStarted();\\n        //require(s_events[_eventId].status == GameStatus.Started);\\n        s_events[_eventId].status = GameStatus.Ended;\\n        Event memory _event = s_events[_eventId];\\n        emit GameEnded(\\n            _event.eventGameAddress,\\n            _event.eventOwner,\\n            block.timestamp\\n        );\\n    }\\n\\n    //\\n    // CHANGE GAME STATUS\\n    //\\n\\n    function _addWinner(uint256 _eventId, address _winner) external {\\n        if (msg.sender != s_events[_eventId].eventGameAddress)\\n            revert EventLog__NotCalledFromEventGame();\\n        s_winners[_eventId][_winner] = true;\\n    }\\n\\n    //\\n    // GETTER FUNCTIONS\\n    //\\n\\n    function getNumberOfEvents() public view returns (uint256) {\\n        return s_numberOfEvents;\\n    }\\n\\n    function getEvent(uint256 _eventId) public view returns (Event memory) {\\n        Event memory newEvent = s_events[_eventId];\\n        return newEvent;\\n    }\\n\\n    function getEventAddress(uint256 _eventId) public view returns (address) {\\n        return s_events[_eventId].eventGameAddress;\\n    }\\n\\n    function getEventOwner(uint256 _eventId) public view returns (address) {\\n        return s_events[_eventId].eventOwner;\\n    }\\n\\n    function getTicketPrice(uint256 _eventId) public view returns (uint256) {\\n        return s_events[_eventId].ticketPrice;\\n    }\\n\\n    function getTotalUsers(uint256 _eventId) public view returns (uint256) {\\n        return s_events[_eventId].totalUsers;\\n    }\\n\\n    //function getGameStatus(uint256 _eventId) public view returns (uint8) {\\n    //    return s_events[_eventId].status;\\n    //}\\n\\n    function getEventName(uint256 _eventId)\\n        external\\n        view\\n        returns (string memory)\\n    {\\n        return s_events[_eventId].eventName;\\n    }\\n\\n    function getNumberOfTickets(uint256 _eventId)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        uint256 numberOfTickets = s_events[_eventId].numberOfTickets;\\n        return numberOfTickets;\\n    }\\n\\n    function getOpenEvents() public view returns (Event[] memory) {\\n        uint256 availableLength = 0;\\n        for (uint256 i = 1; i <= s_numberOfEvents; i++) {\\n            if (s_events[i].status == GameStatus.Registering) {\\n                availableLength += 1;\\n            }\\n        }\\n\\n        Event[] memory openEvents = new Event[](availableLength);\\n        uint256 currentIndex = 0;\\n        for (uint256 i = 1; i <= s_numberOfEvents; i++) {\\n            if (s_events[i].status == GameStatus.Registering) {\\n                openEvents[currentIndex] = s_events[i];\\n                currentIndex += 1;\\n            }\\n        }\\n        return openEvents;\\n    }\\n\\n    function getRegisteredEvents(address _userAddress)\\n        public\\n        view\\n        returns (Event[] memory)\\n    {\\n        uint256[] memory registeredEvents = s_registeredEvents[_userAddress];\\n        uint256 availableLength = registeredEvents.length;\\n        Event[] memory registeredEventsStruct = new Event[](availableLength);\\n        for (uint256 i = 0; i < availableLength; i++) {\\n            uint256 eventId = registeredEvents[i];\\n            Event memory newEvent = s_events[eventId];\\n            registeredEventsStruct[i] = newEvent;\\n        }\\n        return registeredEventsStruct;\\n    }\\n\\n    function getCreatedEvents(address _userAddress)\\n        public\\n        view\\n        returns (Event[] memory)\\n    {\\n        uint256[] memory createdEvents = s_createdEvents[_userAddress];\\n        uint256 availableLength = createdEvents.length;\\n        Event[] memory createdEventsStruct = new Event[](availableLength);\\n        for (uint256 i = 0; i < availableLength; i++) {\\n            uint256 eventId = createdEvents[i];\\n            Event memory newEvent = s_events[eventId];\\n            createdEventsStruct[i] = newEvent;\\n        }\\n        return createdEventsStruct;\\n    }\\n\\n    function _isWinner(uint256 _eventId, address _userAddress)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return s_winners[_eventId][_userAddress];\\n    }\\n}\\n\",\"keccak256\":\"0x8ae7a3fd9823266b264cd9a35ac0252c226a30063d0cc03be0f1cfb69ec7a3a4\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008081905550612ec5806100276000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637b7528ac116100b8578063f02775241161007c578063f02775241461035c578063f052cf991461038c578063f06fc961146103a8578063fbf6265e146103d8578063fc999f2014610408578063fe210f691461042457610137565b80637b7528ac146102bc5780639abea6c1146102d8578063ab31803f146102f4578063c90eeff114610324578063ee0591fe1461034057610137565b80634945fcc7116100ff5780634945fcc7146101f257806364ab2b10146102225780636d1884e01461023e5780636e59b1ad1461026e578063790509041461029e57610137565b8063069e2fb21461013c57806309ac3bb5146101585780631210b3d6146101765780631c25f16e1461019257806320037f33146101c2575b600080fd5b610156600480360381019061015191906125fd565b610454565b005b610160610587565b60405161016d9190612af8565b60405180910390f35b610190600480360381019061018b9190612793565b610590565b005b6101ac60048036038101906101a79190612639565b61064a565b6040516101b99190612a5c565b60405180910390f35b6101dc60048036038101906101d791906125d4565b61068a565b6040516101e99190612a77565b60405180910390f35b61020c60048036038101906102079190612639565b610a5d565b6040516102199190612ab4565b60405180910390f35b61023c6004803603810190610237919061273f565b610b05565b005b61025860048036038101906102539190612639565b610bcf565b6040516102659190612ad6565b60405180910390f35b61028860048036038101906102839190612639565b610de5565b6040516102959190612af8565b60405180910390f35b6102a6610e0a565b6040516102b39190612a77565b60405180910390f35b6102d660048036038101906102d19190612639565b61127a565b005b6102f260048036038101906102ed9190612793565b6116bc565b005b61030e600480360381019061030991906125d4565b611776565b60405161031b9190612a77565b60405180910390f35b61033e6004803603810190610339919061269e565b611b49565b005b61035a60048036038101906103559190612662565b611d61565b005b61037660048036038101906103719190612639565b611e69565b6040516103839190612af8565b60405180910390f35b6103a660048036038101906103a19190612639565b611e89565b005b6103c260048036038101906103bd9190612639565b6122cc565b6040516103cf9190612af8565b60405180910390f35b6103f260048036038101906103ed9190612662565b6122ec565b6040516103ff9190612a99565b60405180910390f35b610422600480360381019061041d91906125fd565b612354565b005b61043e60048036038101906104399190612639565b6123be565b60405161044b9190612a5c565b60405180910390f35b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ef576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055600160026000838152602001908152602001600020600501600082825461057c9190612bcf565b925050819055505050565b60008054905090565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000848152602001908152602001600020600401819055505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561071757602002820191906000526020600020905b815481526020019060010190808311610703575b5050505050905060008151905060008167ffffffffffffffff811115610766577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561079f57816020015b61078c6123fe565b8152602001906001900390816107845790505b50905060005b82811015610a515760008482815181106107e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546108ce90612cd4565b80601f01602080910402602001604051908101604052809291908181526020018280546108fa90612cd4565b80156109475780601f1061091c57610100808354040283529160200191610947565b820191906000526020600020905b81548152906001019060200180831161092a57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660028111156109b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156109f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080848481518110610a31577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050508080610a4990612d37565b9150506107a5565b50809350505050919050565b6060600260008381526020019081526020016000206002018054610a8090612cd4565b80601f0160208091040260200160405190810160405280929190818152602001828054610aac90612cd4565b8015610af95780601f10610ace57610100808354040283529160200191610af9565b820191906000526020600020905b815481529060010190602001808311610adc57829003601f168201915b50505050509050919050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba0576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008481526020019081526020016000206002019080519060200190610bca92919061249f565b505050565b610bd76123fe565b6000600260008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610cb390612cd4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdf90612cd4565b8015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115610d9e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610dd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080915050919050565b6000806002600084815260200190815260200160002060030154905080915050919050565b6060600080600190505b6000548111610edc5760006002811115610e57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115610eb3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ec957600182610ec69190612bcf565b91505b8080610ed490612d37565b915050610e14565b5060008167ffffffffffffffff811115610f1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f5857816020015b610f456123fe565b815260200190600190039081610f3d5790505b509050600080600190505b60005481116112705760006002811115610fa6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115611002577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561125d57600260008281526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546110e290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461110e90612cd4565b801561115b5780601f106111305761010080835404028352916020019161115b565b820191906000526020600020905b81548152906001019060200180831161113e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660028111156111cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611205577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050838381518110611242577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018261125a9190612bcf565b91505b808061126890612d37565b915050610f63565b5081935050505090565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611315576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561134f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff1660028111156113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146113e2576040517f7c26c04a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600083815260200190815260200160002060060160006101000a81548160ff02191690836002811115611441577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461152290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461154e90612cd4565b801561159b5780601f106115705761010080835404028352916020019161159b565b820191906000526020600020905b81548152906001019060200180831161157e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600281111561160d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611645577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff167fc5e48929c6ad41636874ae3938e60e36431dd0899ca520e58c58107c9e4454de426040516116b09190612af8565b60405180910390a35050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611757576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000848152602001908152602001600020600301819055505050565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561180357602002820191906000526020600020905b8154815260200190600101908083116117ef575b5050505050905060008151905060008167ffffffffffffffff811115611852577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561188b57816020015b6118786123fe565b8152602001906001900390816118705790505b50905060005b82811015611b3d5760008482815181106118d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546119ba90612cd4565b80601f01602080910402602001604051908101604052809291908181526020018280546119e690612cd4565b8015611a335780601f10611a0857610100808354040283529160200191611a33565b820191906000526020600020905b815481529060010190602001808311611a1657829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115611aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611add577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080848481518110611b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050508080611b3590612d37565b915050611891565b50809350505050919050565b6040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020016000815260200160006002811115611bdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152506002600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611c9f92919061249f565b50606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836002811115611d0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050506001600080828254611d299190612bcf565b925050819055506001869080600181540180825580915050600190039060005260206000200160009091909190915055505050505050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611dfc576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016005600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060026000838152602001908152602001600020600501549050919050565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f24576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002811115611f5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115611fba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611ff1576040517faef48ca700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002600083815260200190815260200160002060060160006101000a81548160ff02191690836002811115612051577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461213290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461215e90612cd4565b80156121ab5780601f10612180576101008083540402835291602001916121ab565b820191906000526020600020905b81548152906001019060200180831161218e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600281111561221d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115612255577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff167fee0dca10a9957dad74da3fe318a3ccc561c46d96be0ab0b66e7aff32aab94cf3426040516122c09190612af8565b60405180910390a35050565b600060026000838152602001908152602001600020600401549050919050565b60006005600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b60006002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081526020016000815260200160006002811115612499577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b8280546124ab90612cd4565b90600052602060002090601f0160209004810192826124cd5760008555612514565b82601f106124e657805160ff1916838001178555612514565b82800160010185558215612514579182015b828111156125135782518255916020019190600101906124f8565b5b5090506125219190612525565b5090565b5b8082111561253e576000816000905550600101612526565b5090565b600061255561255084612b38565b612b13565b90508281526020810184848401111561256d57600080fd5b612578848285612c92565b509392505050565b60008135905061258f81612e61565b92915050565b600082601f8301126125a657600080fd5b81356125b6848260208601612542565b91505092915050565b6000813590506125ce81612e78565b92915050565b6000602082840312156125e657600080fd5b60006125f484828501612580565b91505092915050565b6000806040838503121561261057600080fd5b600061261e85828601612580565b925050602061262f858286016125bf565b9150509250929050565b60006020828403121561264b57600080fd5b6000612659848285016125bf565b91505092915050565b6000806040838503121561267557600080fd5b6000612683858286016125bf565b925050602061269485828601612580565b9150509250929050565b60008060008060008060c087890312156126b757600080fd5b60006126c589828a016125bf565b96505060206126d689828a01612580565b95505060406126e789828a01612580565b945050606087013567ffffffffffffffff81111561270457600080fd5b61271089828a01612595565b935050608061272189828a016125bf565b92505060a061273289828a016125bf565b9150509295509295509295565b6000806040838503121561275257600080fd5b6000612760858286016125bf565b925050602083013567ffffffffffffffff81111561277d57600080fd5b61278985828601612595565b9150509250929050565b600080604083850312156127a657600080fd5b60006127b4858286016125bf565b92505060206127c5858286016125bf565b9150509250929050565b60006127db8383612906565b905092915050565b6127ec81612c25565b82525050565b6127fb81612c25565b82525050565b600061280c82612b79565b6128168185612b9c565b93508360208202850161282885612b69565b8060005b85811015612864578484038952815161284585826127cf565b945061285083612b8f565b925060208a0199505060018101905061282c565b50829750879550505050505092915050565b61287f81612c37565b82525050565b61288e81612c80565b82525050565b600061289f82612b84565b6128a98185612bad565b93506128b9818560208601612ca1565b6128c281612e3c565b840191505092915050565b60006128d882612b84565b6128e28185612bbe565b93506128f2818560208601612ca1565b6128fb81612e3c565b840191505092915050565b600060e08301600083015161291e60008601826127e3565b50602083015161293160208601826127e3565b50604083015184820360408601526129498282612894565b915050606083015161295e6060860182612a3e565b5060808301516129716080860182612a3e565b5060a083015161298460a0860182612a3e565b5060c083015161299760c0860182612885565b508091505092915050565b600060e0830160008301516129ba60008601826127e3565b5060208301516129cd60208601826127e3565b50604083015184820360408601526129e58282612894565b91505060608301516129fa6060860182612a3e565b506080830151612a0d6080860182612a3e565b5060a0830151612a2060a0860182612a3e565b5060c0830151612a3360c0860182612885565b508091505092915050565b612a4781612c76565b82525050565b612a5681612c76565b82525050565b6000602082019050612a7160008301846127f2565b92915050565b60006020820190508181036000830152612a918184612801565b905092915050565b6000602082019050612aae6000830184612876565b92915050565b60006020820190508181036000830152612ace81846128cd565b905092915050565b60006020820190508181036000830152612af081846129a2565b905092915050565b6000602082019050612b0d6000830184612a4d565b92915050565b6000612b1d612b2e565b9050612b298282612d06565b919050565b6000604051905090565b600067ffffffffffffffff821115612b5357612b52612e0d565b5b612b5c82612e3c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612bda82612c76565b9150612be583612c76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c1a57612c19612d80565b5b828201905092915050565b6000612c3082612c56565b9050919050565b60008115159050919050565b6000819050612c5182612e4d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612c8b82612c43565b9050919050565b82818337600083830152505050565b60005b83811015612cbf578082015181840152602081019050612ca4565b83811115612cce576000848401525b50505050565b60006002820490506001821680612cec57607f821691505b60208210811415612d0057612cff612dde565b5b50919050565b612d0f82612e3c565b810181811067ffffffffffffffff82111715612d2e57612d2d612e0d565b5b80604052505050565b6000612d4282612c76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612d7557612d74612d80565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110612e5e57612e5d612daf565b5b50565b612e6a81612c25565b8114612e7557600080fd5b50565b612e8181612c76565b8114612e8c57600080fd5b5056fea2646970667358221220ea8695c75b1ab285252b48fc054cadd21f5b6cb257db34ffb9b443211d284c7464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80637b7528ac116100b8578063f02775241161007c578063f02775241461035c578063f052cf991461038c578063f06fc961146103a8578063fbf6265e146103d8578063fc999f2014610408578063fe210f691461042457610137565b80637b7528ac146102bc5780639abea6c1146102d8578063ab31803f146102f4578063c90eeff114610324578063ee0591fe1461034057610137565b80634945fcc7116100ff5780634945fcc7146101f257806364ab2b10146102225780636d1884e01461023e5780636e59b1ad1461026e578063790509041461029e57610137565b8063069e2fb21461013c57806309ac3bb5146101585780631210b3d6146101765780631c25f16e1461019257806320037f33146101c2575b600080fd5b610156600480360381019061015191906125fd565b610454565b005b610160610587565b60405161016d9190612af8565b60405180910390f35b610190600480360381019061018b9190612793565b610590565b005b6101ac60048036038101906101a79190612639565b61064a565b6040516101b99190612a5c565b60405180910390f35b6101dc60048036038101906101d791906125d4565b61068a565b6040516101e99190612a77565b60405180910390f35b61020c60048036038101906102079190612639565b610a5d565b6040516102199190612ab4565b60405180910390f35b61023c6004803603810190610237919061273f565b610b05565b005b61025860048036038101906102539190612639565b610bcf565b6040516102659190612ad6565b60405180910390f35b61028860048036038101906102839190612639565b610de5565b6040516102959190612af8565b60405180910390f35b6102a6610e0a565b6040516102b39190612a77565b60405180910390f35b6102d660048036038101906102d19190612639565b61127a565b005b6102f260048036038101906102ed9190612793565b6116bc565b005b61030e600480360381019061030991906125d4565b611776565b60405161031b9190612a77565b60405180910390f35b61033e6004803603810190610339919061269e565b611b49565b005b61035a60048036038101906103559190612662565b611d61565b005b61037660048036038101906103719190612639565b611e69565b6040516103839190612af8565b60405180910390f35b6103a660048036038101906103a19190612639565b611e89565b005b6103c260048036038101906103bd9190612639565b6122cc565b6040516103cf9190612af8565b60405180910390f35b6103f260048036038101906103ed9190612662565b6122ec565b6040516103ff9190612a99565b60405180910390f35b610422600480360381019061041d91906125fd565b612354565b005b61043e60048036038101906104399190612639565b6123be565b60405161044b9190612a5c565b60405180910390f35b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ef576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055600160026000838152602001908152602001600020600501600082825461057c9190612bcf565b925050819055505050565b60008054905090565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000848152602001908152602001600020600401819055505050565b60006002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561071757602002820191906000526020600020905b815481526020019060010190808311610703575b5050505050905060008151905060008167ffffffffffffffff811115610766577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561079f57816020015b61078c6123fe565b8152602001906001900390816107845790505b50905060005b82811015610a515760008482815181106107e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546108ce90612cd4565b80601f01602080910402602001604051908101604052809291908181526020018280546108fa90612cd4565b80156109475780601f1061091c57610100808354040283529160200191610947565b820191906000526020600020905b81548152906001019060200180831161092a57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660028111156109b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156109f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080848481518110610a31577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050508080610a4990612d37565b9150506107a5565b50809350505050919050565b6060600260008381526020019081526020016000206002018054610a8090612cd4565b80601f0160208091040260200160405190810160405280929190818152602001828054610aac90612cd4565b8015610af95780601f10610ace57610100808354040283529160200191610af9565b820191906000526020600020905b815481529060010190602001808311610adc57829003601f168201915b50505050509050919050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba0576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008481526020019081526020016000206002019080519060200190610bca92919061249f565b505050565b610bd76123fe565b6000600260008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610cb390612cd4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdf90612cd4565b8015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115610d9e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610dd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080915050919050565b6000806002600084815260200190815260200160002060030154905080915050919050565b6060600080600190505b6000548111610edc5760006002811115610e57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115610eb3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ec957600182610ec69190612bcf565b91505b8080610ed490612d37565b915050610e14565b5060008167ffffffffffffffff811115610f1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f5857816020015b610f456123fe565b815260200190600190039081610f3d5790505b509050600080600190505b60005481116112705760006002811115610fa6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115611002577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561125d57600260008281526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546110e290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461110e90612cd4565b801561115b5780601f106111305761010080835404028352916020019161115b565b820191906000526020600020905b81548152906001019060200180831161113e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660028111156111cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611205577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050838381518110611242577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018261125a9190612bcf565b91505b808061126890612d37565b915050610f63565b5081935050505090565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611315576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561134f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff1660028111156113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146113e2576040517f7c26c04a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600083815260200190815260200160002060060160006101000a81548160ff02191690836002811115611441577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461152290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461154e90612cd4565b801561159b5780601f106115705761010080835404028352916020019161159b565b820191906000526020600020905b81548152906001019060200180831161157e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600281111561160d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611645577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff167fc5e48929c6ad41636874ae3938e60e36431dd0899ca520e58c58107c9e4454de426040516116b09190612af8565b60405180910390a35050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611757576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060026000848152602001908152602001600020600301819055505050565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561180357602002820191906000526020600020905b8154815260200190600101908083116117ef575b5050505050905060008151905060008167ffffffffffffffff811115611852577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561188b57816020015b6118786123fe565b8152602001906001900390816118705790505b50905060005b82811015611b3d5760008482815181106118d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546119ba90612cd4565b80601f01602080910402602001604051908101604052809291908181526020018280546119e690612cd4565b8015611a335780601f10611a0857610100808354040283529160200191611a33565b820191906000526020600020905b815481529060010190602001808311611a1657829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115611aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611add577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050905080848481518110611b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525050508080611b3590612d37565b915050611891565b50809350505050919050565b6040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020016000815260200160006002811115611bdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152506002600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611c9f92919061249f565b50606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836002811115611d0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050506001600080828254611d299190612bcf565b925050819055506001869080600181540180825580915050600190039060005260206000200160009091909190915055505050505050565b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611dfc576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016005600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060026000838152602001908152602001600020600501549050919050565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f24576040517f8f245d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002811115611f5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060060160009054906101000a900460ff166002811115611fba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611ff1576040517faef48ca700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002600083815260200190815260200160002060060160006101000a81548160ff02191690836002811115612051577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600260008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461213290612cd4565b80601f016020809104026020016040519081016040528092919081815260200182805461215e90612cd4565b80156121ab5780601f10612180576101008083540402835291602001916121ab565b820191906000526020600020905b81548152906001019060200180831161218e57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600281111561221d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115612255577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff167fee0dca10a9957dad74da3fe318a3ccc561c46d96be0ab0b66e7aff32aab94cf3426040516122c09190612af8565b60405180910390a35050565b600060026000838152602001908152602001600020600401549050919050565b60006005600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b60006002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081526020016000815260200160006002811115612499577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b8280546124ab90612cd4565b90600052602060002090601f0160209004810192826124cd5760008555612514565b82601f106124e657805160ff1916838001178555612514565b82800160010185558215612514579182015b828111156125135782518255916020019190600101906124f8565b5b5090506125219190612525565b5090565b5b8082111561253e576000816000905550600101612526565b5090565b600061255561255084612b38565b612b13565b90508281526020810184848401111561256d57600080fd5b612578848285612c92565b509392505050565b60008135905061258f81612e61565b92915050565b600082601f8301126125a657600080fd5b81356125b6848260208601612542565b91505092915050565b6000813590506125ce81612e78565b92915050565b6000602082840312156125e657600080fd5b60006125f484828501612580565b91505092915050565b6000806040838503121561261057600080fd5b600061261e85828601612580565b925050602061262f858286016125bf565b9150509250929050565b60006020828403121561264b57600080fd5b6000612659848285016125bf565b91505092915050565b6000806040838503121561267557600080fd5b6000612683858286016125bf565b925050602061269485828601612580565b9150509250929050565b60008060008060008060c087890312156126b757600080fd5b60006126c589828a016125bf565b96505060206126d689828a01612580565b95505060406126e789828a01612580565b945050606087013567ffffffffffffffff81111561270457600080fd5b61271089828a01612595565b935050608061272189828a016125bf565b92505060a061273289828a016125bf565b9150509295509295509295565b6000806040838503121561275257600080fd5b6000612760858286016125bf565b925050602083013567ffffffffffffffff81111561277d57600080fd5b61278985828601612595565b9150509250929050565b600080604083850312156127a657600080fd5b60006127b4858286016125bf565b92505060206127c5858286016125bf565b9150509250929050565b60006127db8383612906565b905092915050565b6127ec81612c25565b82525050565b6127fb81612c25565b82525050565b600061280c82612b79565b6128168185612b9c565b93508360208202850161282885612b69565b8060005b85811015612864578484038952815161284585826127cf565b945061285083612b8f565b925060208a0199505060018101905061282c565b50829750879550505050505092915050565b61287f81612c37565b82525050565b61288e81612c80565b82525050565b600061289f82612b84565b6128a98185612bad565b93506128b9818560208601612ca1565b6128c281612e3c565b840191505092915050565b60006128d882612b84565b6128e28185612bbe565b93506128f2818560208601612ca1565b6128fb81612e3c565b840191505092915050565b600060e08301600083015161291e60008601826127e3565b50602083015161293160208601826127e3565b50604083015184820360408601526129498282612894565b915050606083015161295e6060860182612a3e565b5060808301516129716080860182612a3e565b5060a083015161298460a0860182612a3e565b5060c083015161299760c0860182612885565b508091505092915050565b600060e0830160008301516129ba60008601826127e3565b5060208301516129cd60208601826127e3565b50604083015184820360408601526129e58282612894565b91505060608301516129fa6060860182612a3e565b506080830151612a0d6080860182612a3e565b5060a0830151612a2060a0860182612a3e565b5060c0830151612a3360c0860182612885565b508091505092915050565b612a4781612c76565b82525050565b612a5681612c76565b82525050565b6000602082019050612a7160008301846127f2565b92915050565b60006020820190508181036000830152612a918184612801565b905092915050565b6000602082019050612aae6000830184612876565b92915050565b60006020820190508181036000830152612ace81846128cd565b905092915050565b60006020820190508181036000830152612af081846129a2565b905092915050565b6000602082019050612b0d6000830184612a4d565b92915050565b6000612b1d612b2e565b9050612b298282612d06565b919050565b6000604051905090565b600067ffffffffffffffff821115612b5357612b52612e0d565b5b612b5c82612e3c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612bda82612c76565b9150612be583612c76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c1a57612c19612d80565b5b828201905092915050565b6000612c3082612c56565b9050919050565b60008115159050919050565b6000819050612c5182612e4d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612c8b82612c43565b9050919050565b82818337600083830152505050565b60005b83811015612cbf578082015181840152602081019050612ca4565b83811115612cce576000848401525b50505050565b60006002820490506001821680612cec57607f821691505b60208210811415612d0057612cff612dde565b5b50919050565b612d0f82612e3c565b810181811067ffffffffffffffff82111715612d2e57612d2d612e0d565b5b80604052505050565b6000612d4282612c76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612d7557612d74612d80565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110612e5e57612e5d612daf565b5b50565b612e6a81612c25565b8114612e7557600080fd5b50565b612e8181612c76565b8114612e8c57600080fd5b5056fea2646970667358221220ea8695c75b1ab285252b48fc054cadd21f5b6cb257db34ffb9b443211d284c7464736f6c63430008040033",
  "devdoc": {
    "details": "This contract saves all events and their details and allows to query data",
    "kind": "dev",
    "methods": {},
    "title": "@author David Camps Novi",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_numberOfEvents",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_eventIds",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 18,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_events",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Event)54_storage)"
      },
      {
        "astId": 23,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_registeredEvents",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 28,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_createdEvents",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 34,
        "contract": "contracts/EventLog.sol:EventLog",
        "label": "s_winners",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(GameStatus)38": {
        "encoding": "inplace",
        "label": "enum EventLog.GameStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Event)54_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct EventLog.Event)",
        "numberOfBytes": "32",
        "value": "t_struct(Event)54_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Event)54_storage": {
        "encoding": "inplace",
        "label": "struct EventLog.Event",
        "members": [
          {
            "astId": 40,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "eventGameAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 42,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "eventOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 44,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "eventName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "numberOfTickets",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 48,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "ticketPrice",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 50,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "totalUsers",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 53,
            "contract": "contracts/EventLog.sol:EventLog",
            "label": "status",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(GameStatus)38"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}